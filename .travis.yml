sudo: required
dist: trusty
language: node_js
cache:
- npm
- directories:
  # - "./build"
  - "$HOME/.cache/electron"
  - "$HOME/.cache/electron-builder"
notifications:
  email:
    on_success: never
    on_failure: change
matrix:
  include:
  - os: linux
    node_js: lts/*
    env:
    - ELECTRON_CACHE=$HOME/.cache/electron
    - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder
    compiler: clang
 
    # - os: osx
    #   node_js: lts/*
    #   env:
    #     - ELECTRON_CACHE=$HOME/.cache/electron
    #     - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder

    # - os: windows
    #   node_js: lts/*
    #   env:
    #     - ELECTRON_CACHE=$HOME/.cache/electron
    #     - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder
  allow_failures:
  - os: osx
  fast_finish: true
addons:
  apt:
    packages:
    - gcc-multilib
    - g++-multilib
    - libgnome-keyring-dev
    - icnsutils
    - graphicsmagick
    - xz-utils
    - rpm
    - bsdtar
    - snapd
before_install:
- openssl aes-256-cbc -K $encrypted_1248026558a0_key -iv $encrypted_1248026558a0_iv
  -in cloud-storage-key.json.enc -out ./dev-assets/cloud-storage-key.json -d
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo snap install snapcraft --classic; fi
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export DISPLAY=:99.0; sh -e /etc/init.d/xvfb
  start; sleep 3; fi
# - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then ( sudo Xvfb :99 -ac -screen 0 1024x768x8;
#   echo ok )& fi
# - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then sudo spctl --master-disable; fi
# - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then powershell -command 'Set-MpPreference
#   -DisableRealtimeMonitoring $true'; fi
# - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then Powershell -Command 'Set-ExecutionPolicy
#   -ExecutionPolicy Unrestricted -Scope LocalMachine'; fi

install:
 - |
    if [ $TRAVIS_BRANCH == "master" || $TRAVIS_BRANCH == "master-all" ]; then
      npm install
    fi

before_script:
- node --version
- npm --version

script:
- npm run build-ci
- npm run test-ci

after_success:
- npm run upload-ci

# - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then powershell -command 'npm run test-build'; fi
# - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then ls -la ./build/win-unpacked/; fi
# - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then ./build/win-unpacked/Quark.exe ./test/__testing__fjdsbfkbsdibsdi__testing__testing.qrk; fi
# - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then ls -la C:/Windows/System32/; fi
# - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then sudo npm run test-build --unsafe-perm=true --allow-root; fi
# - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then --unsafe-perm=true --allow-root; fi
# - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then sudo npm run test-build --unsafe-perm=true --allow-root; fi

# after_success:
#   - npm run qb
# deploy:
#   provider: gcs
#   access_key_id: GOOGW5SCWZHA42FT7THEI7TF
#   secret_access_key:
#     secure: BYb3QH4rddkbWUBSd48bfBPDnok4yf03QEaUtMcvUnm23VWpLXeR2nZuApVaU2ssKAXuvjtBhEeDZdrOr9jcvJD5UTzWNVBMrXA4X7eoHHbxz/6IO4Bk1GhziKARWn6RVxNMLxsBTCGAP1KwMHpRvg91fCRGJ5oB691MiGc8V+FQ0O4Kpeq2xDQSC8SHKvoXpx3eYeQq86e0me4HrLr+eUZmQ/IWaza0dFZvRteT7NgtnosCwRFoKatVyGjLj7Vke53WBPtQGuVPUatYvXLL2Ebz0vM1zWT1/kgyr/VqsaOZ2QCuekUUBMdkXLwnLPCjp2t3l+YHKyQI5SYdg457W9/c/WU0OeQnGvjRZ1855yduw6bDz3RH7uQ9KisgS04SfVsAJg/zOFlMQmOdtceIr38Az1SwdDQetz0vsewFSMf7HukRA/klWvbdopBXm8rWOC6cigxo0d0C+TfbMtBFGHYLyx/4JK0UB5kwhDxdI2sYa6ek6gX3yFhqgz1k1qsPBbpPX5qgvkrJ5F/SeJ5CA+6mXnDiouLnjEPAceBEQOySYL39eOSixqrJfAdxUJSFIe/Jph5qYV+rxHsGtcWOQPAXrBh9xjk+NnvPRWBt2YF9TeNs3ZowC8IJAlwdSnqyNXSkdg2BS1Q261x3uQsdUDRKApu1pfR1pvYBNRVPxPs=
#   bucket: quarkjs-travis
#   local-dir: www
#   skip_cleanup: true
#   acl: public-read